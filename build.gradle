plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group 'com.tourguidereward'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.13.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation(name: 'RewardCentral', ext: 'jar')
    implementation(name: 'TripPricer', ext: 'jar')
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.0.3'
    implementation group: 'org.javamoney', name: 'moneta', version: '1.3'
    implementation group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'
}
jacoco {
    toolVersion = "0.8.6"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // End the test task by doing a jacoco report

    jacocoTestReport {
        dependsOn test // Tests are required to run before generating the report
        finalizedBy jacocoTestCoverageVerification // End with a jacoco code coverage verification

        reports {
            xml.enabled true
            csv.enabled false
            html.enabled true
            html.destination file("build/reports/jacocoHtml")
        }
        afterEvaluate {
            getClassDirectories().setFrom(classDirectories.files.collect {
                fileTree(dir: it,
                        exclude: [ // Exclude the POJO package
                                   'com/tourguidereward/domain/*.class'
                        ]
                )
            })
        }
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                exclude 'com/tourguidereward/domain/*.class' // Exclude the POJO package
                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.3
                }
            }
        }
    }
}